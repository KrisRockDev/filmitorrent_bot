from bs4 import BeautifulSoup
import requests
import datetime
import os
# from icecream import ic
from tqdm import tqdm
import shutil
import requests
# from bash import bash


def send_message(txt, image_path):
    # –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    TOKEN = ''

    # –ó–∞–º–µ–Ω–∏—Ç–µ 'chat_id' –Ω–∞ ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    chat_id = [
        "671116551",
    ]

    # URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot API
    url = f'https://api.telegram.org/bot{TOKEN}/sendPhoto'
    with open(txt, mode='r', encoding='utf-8') as discription:
        message_text = discription.read()

    res_txt = ''
    for i in message_text:
        word_list = ['‚úÖ–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:', 'üîóurl:']
        if i.split(' ')[0] not in word_list:
            res_txt += i

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
    for chat_id_item in chat_id:
        with open(image_path, 'rb') as image_file:
            response = requests.post(url, data={'chat_id': chat_id_item, 'caption': res_txt}, files={'photo': image_file})

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
    # if response.status_code == 200:
    # print('–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.')
    # else:
    #     print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º:', response.text)


def save_bin_files(URL, filmitorrent, folder_dir, DIR):
    u = URL
    response = requests.get(u)

    # –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
    soup = BeautifulSoup(response.content, 'html.parser')

    # –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    poster = soup.find('div', class_='poster-big')
    img_src = poster.find('img')['src']

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    img_response = requests.get(filmitorrent[:-1] + img_src)
    with open(os.path.join(folder_dir, 'poster.jpg'), 'wb') as f:
        f.write(img_response.content)

    # –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª—ã *.torrent
    torrent_links = []
    table = soup.find('table', class_='res85gtj')
    rows = table.find_all('tr')[1:]  # –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    for row in rows:
        cells = row.find_all('td')
        link = cells[-1].find('a')['href']
        torrent_links.append(link)

    # –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã *.torrent
    torrent_file = torrent_links[-1]
    for torrent_link in torrent_links[::-1]:
        if torrent_link.find('1080') > -1:
            torrent_file = torrent_link

    file_response = requests.get(filmitorrent[:-1] + torrent_file)
    source_file = os.path.join(folder_dir, os.path.split(torrent_file)[1])  # '–ø—É—Ç—å_–∫_–∏—Å—Ö–æ–¥–Ω–æ–º—É_—Ñ–∞–π–ª—É'
    with open(source_file, 'wb') as f:
        f.write(file_response.content)

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ *torrent
    # if folder_dir.lower().find('—Å–µ—Ä–∏–∞–ª') == -1:
    #     shutil.copy(source_file, DIR)

    send_message(txt=os.path.join(folder_dir, '–û–ø–∏—Å–∞–Ω–∏–µ.txt'), image_path=os.path.join(folder_dir, 'poster.jpg'))


def get_date(film_dict):
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏
    date = film_dict['–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:'].lower()
    if date.find('—Å–µ–≥–æ–¥–Ω—è') > -1:
        today = str(datetime.date.today())
        date = [today, date.split(',')[1].strip().replace(':', '-')]
    elif date.find('–≤—á–µ—Ä–∞') > -1:
        today = datetime.date.today()
        yesterday = str(today - datetime.timedelta(days=1))
        date = [yesterday, date.split(',')[1].strip().replace(':', '-')]
    else:
        date_day = '-'.join(date.split(',')[0].split('-')[::-1])
        if len(date_day) == 9:
            date_day = f'{date_day[:-1]}0{date_day[-1]}'
        date = [date_day, date.split(',')[1].strip().replace(':', '-')]
    return [date[0].replace('-', '.'), date[1]]


def wite_log(DIR, folder_name, log_file_name):
    with open(os.path.join(DIR, log_file_name), 'a+', encoding='utf-8') as file:
        file.write(folder_name + '\n')


def wite_log_starts(DIR):
    with open(os.path.join(DIR, 'log_starts.txt'), 'a+', encoding='utf-8') as file:
        file.write(str(datetime.datetime.now()) + '\n')


def create_dir(DIR, film_dict):
    date = get_date(film_dict)
    folder_name = f"{' '.join(date)} {film_dict['–ù–∞–∑–≤–∞–Ω–∏–µ:']} ({film_dict['–ì–æ–¥:']})"

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏
    log_file_name = 'log.txt'
    file_list = []
    f = os.path.join(DIR, log_file_name)
    if os.path.exists(f):
        with open(f, 'r', encoding='utf-8') as file:
            file_list = [item.strip() for item in file.readlines()]
        # print(file_list)

    if folder_name not in file_list[::-1]:
        wite_log(DIR, folder_name, log_file_name)

        if folder_name not in os.listdir(DIR):
            folder_dir = os.path.join(DIR, folder_name)
            os.mkdir(folder_dir)
            file_name = os.path.join(folder_dir, '–û–ø–∏—Å–∞–Ω–∏–µ.txt')
            text_data = f'''–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {' '.join(date)}\n'''

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
            for item in film_dict:
                text_data += f'{item} {film_dict[item]}\n'
            text_data = text_data.replace('–í—Ä–µ–º—è', 'üïí–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å').replace('–ù–∞–∑–≤–∞–Ω–∏–µ', 'üé•–ù–∞–∑–≤–∞–Ω–∏–µ').replace(
                '–†–µ–π—Ç–∏–Ω–≥: 0\n', '').replace('–†–µ–π—Ç–∏–Ω–≥', 'üí•–†–µ–π—Ç–∏–Ω–≥', ).replace('–ê–∫—Ç–µ—Ä—ã', 'ü§°–ê–∫—Ç–µ—Ä—ã', ).replace(
                '–†–µ–∂–∏—Å—Å–µ—Ä', 'üë§–†–µ–∂–∏—Å—Å–µ—Ä', ).replace('–°—Ç—Ä–∞–Ω–∞', 'üö©–°—Ç—Ä–∞–Ω–∞', ).replace('–ì–æ–¥', 'üìÖ–ì–æ–¥', ).replace(
                '–ñ–∞–Ω—Ä', 'üìå–ñ–∞–Ω—Ä', ).replace('–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ', '‚úÖ–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ', ).replace('url', 'üîóurl', )
            with open(file=file_name, mode='w', encoding='utf-8') as file:
                file.write(text_data)

            return film_dict, folder_dir
        else:
            return None, None
    else:
        return None, None


def parser(FILMITORRENT):
    res_list = []
    response = requests.get(FILMITORRENT)
    soup = BeautifulSoup(response.text, 'html.parser')

    frate_kps = soup.find_all('div', {'class': 'frate frate-kp'})
    post_stories = soup.find_all('div', {'class': 'post-story'})
    datas = soup.find_all('div', {'class': 'data'})
    post_titles = soup.find_all('div', {'class': 'post-title'})

    for num, post_title in enumerate(post_titles):
        data_dict = {}
        movie_title = post_title.text.strip()

        data = datas[num].find('span', {'class': 'cell'})
        # print(f'–ù–∞–∑–≤–∞–Ω–∏–µ: {movie_title}\n–†–µ–π—Ç–∏–Ω–≥: {frate_kps[num].text}')
        # print(f'–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {data.text.strip()}')

        link = post_title.find('a')['href']
        # print(f'url: {link}')

        data_dict['–ù–∞–∑–≤–∞–Ω–∏–µ:'] = movie_title.replace(':', '.')
        data_dict['–†–µ–π—Ç–∏–Ω–≥:'] = frate_kps[num].text
        data_dict['–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:'] = data.text.strip()
        data_dict['url:'] = link

        post_story = post_stories[num]

        for b in post_story.find_all('b'):
            key = b.text.strip()
            value = []
            for sibling in b.next_siblings:
                if sibling.name == 'br':
                    break
                if sibling.name == 'a':
                    value.append(sibling.text)
                elif isinstance(sibling, str):
                    value.append(sibling.strip())
            line = []
            for val in value:
                if val not in ['', ',']:
                    line.append(val)
            data_dict[key] = ', '.join(line)

        res_list.append(data_dict)
    return res_list


def main():
    USER = ''
    PASS = ''
    # bash(rf'sudo mount -t cifs -o username={USER},password={PASS} //192.168.1.40/video /home/pi/nas/films')
    # bash(rf'sudo mount -t cifs -o username={USER},password={PASS} //192.168.1.40/Trash /home/pi/nas/trash')

    FILMITORRENT = 'http://filmitorrent.net/'
    DIR = r'd:\filmtorrent'
    # DIR = r'/home/pi/filmtorrent'
    # DIR = r'/home/pi/nas/films/Films'
    wite_log_starts(DIR)

    films_list = parser(FILMITORRENT)

    for film_dict in tqdm(films_list[::-1], ncols=80):
        film_dict, folder_dir = create_dir(DIR, film_dict)
        if film_dict:
            save_bin_files(film_dict['url:'], FILMITORRENT, folder_dir, DIR)


if __name__ == '__main__':
    main()
#