import os
import requests
from dotenv import load_dotenv
from icecream import ic
from settings import *

# –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ chat_id
BOT_TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

# ic(BOT_TOKEN)
# ic(CHAT_ID)


# –î–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞
data_dict = {
    'poster': 'http://filmitorrent.net/uploads/posts/2024-12/thumbs/1735547056_9082b1712a.jpg',
    'torrent_file': 'http://filmitorrent.net/torrenti/7/14/Odin.den.v.Stambule.2024.WEB-DL.1080p_54493_93.torrent',
    'url:': 'https://filmitorrent.net/komedia/5449-odin-den-v-stambule-2024.html',
    '–ê–∫—Ç–µ—Ä—ã:': '–õ–µ–æ–Ω–∏–¥ –ë–∞—Ä–∞—Ü, –ö–∞–º–∏–ª—å –õ–∞—Ä–∏–Ω, –†–æ—Å—Ç–∏—Å–ª–∞–≤ –•–∞–∏—Ç, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –î–µ–º–∏–¥–æ–≤, '
               '–¢–∞—Ä–∞—Å –ö—É–∑—å–º–∏–Ω, –ê—Ä–∏–Ω–∞ –ú–∞—Ä–∞–∫—É–ª–∏–Ω–∞, –ê–Ω–∞—Å—Ç–∞—Å–∏—è –ë–µ–ª–æ—É—Å–æ–≤–∞',
    '–í—Ä–µ–º—è:': '1 —á 24 –º–∏–Ω',
    '–ì–æ–¥:': '2024',
    '–ñ–∞–Ω—Ä:': '–∫–æ–º–µ–¥–∏—è',
    '–ù–∞–∑–≤–∞–Ω–∏–µ:': '–û–¥–∏–Ω –¥–µ–Ω—å –≤ –°—Ç–∞–º–±—É–ª–µ',
    '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:': '30-12-2024, 11:24',
    '–†–µ–∂–∏—Å—Å–µ—Ä:': '–ê–≤–µ—Ç –û–≥–∞–Ω–µ—Å—è–Ω',
    '–†–µ–π—Ç–∏–Ω–≥:': '6.3',
    '–°—Ç—Ä–∞–Ω–∞:': '–†–æ—Å—Å–∏—è'
}


def build_message(data):
    """–°–æ–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è –¥–∞–Ω–Ω—ã—Ö."""
    return (
        f"üé¨ <b>{data['–ù–∞–∑–≤–∞–Ω–∏–µ:']}</b>\n"
        f"üìÖ –ì–æ–¥: {data['–ì–æ–¥:']}\n"
        f"‚è≥ –í—Ä–µ–º—è: {data['–í—Ä–µ–º—è:']}\n"
        f"üåç –°—Ç—Ä–∞–Ω–∞: {data['–°—Ç—Ä–∞–Ω–∞:']}\n"
        f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {data['–†–µ–π—Ç–∏–Ω–≥:']}\n"
        f"üé• –†–µ–∂–∏—Å—Å–µ—Ä: {data['–†–µ–∂–∏—Å—Å–µ—Ä:']}\n"
        f"ü§° –ê–∫—Ç–µ—Ä—ã: {data['–ê–∫—Ç–µ—Ä—ã:']}\n"
        f"üé≠ –ñ–∞–Ω—Ä: {data['–ñ–∞–Ω—Ä:']}\n"
        f"üîó <a href='{data['url:']}'>–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ñ–∏–ª—å–º–æ–º</a>\n"
        f"üóì –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {data['–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:']}\n"
    )


def download_file(url, save_path):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ —Å—Å—ã–ª–∫–µ."""
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()
        with open(save_path, 'wb') as file:
            for chunk in response.iter_content(chunk_size=8192):
                file.write(chunk)
        return save_path
    except Exception as e:
        ic(f"Error downloading file from {url}: {e}")
        return None


def send_photo_with_caption(bot_token, chat_id, message, poster_url):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –ø–æ—Å—Ç–µ—Ä–æ–º –≤ Telegram."""
    send_photo_url = f"https://api.telegram.org/bot{bot_token}/sendPhoto"

    # –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å—Ç–µ—Ä
    poster_path = download_file(poster_url, "poster.jpg")
    if poster_path:
        with open(poster_path, "rb") as poster_file:
            try:
                response = requests.post(
                    send_photo_url,
                    data={
                        "chat_id": chat_id,
                        "caption": message,
                        "parse_mode": "HTML"
                    },
                    files={"photo": poster_file}
                )
                # ic("Photo response:", response.status_code, response.text)
            except Exception as e:
                ic("Error sending photo and caption:", e)
        os.remove(poster_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    else:
        ic("–ü–æ—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–∫–∞—á–∞–Ω.")


def send_torrent_file(bot_token, chat_id, torrent_url):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ—Ä—Ä–µ–Ω—Ç-—Ñ–∞–π–ª –≤ Telegram."""
    send_document_url = f"https://api.telegram.org/bot{bot_token}/sendDocument"

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ç–æ—Ä—Ä–µ–Ω—Ç-—Ñ–∞–π–ª
    torrent_path = download_file(torrent_url, "file.torrent")
    if torrent_path:
        with open(torrent_path, "rb") as torrent_file:
            try:
                response = requests.post(
                    send_document_url,
                    data={"chat_id": chat_id},
                    files={"document": torrent_file}
                )
                # ic("Torrent response:", response.status_code, response.text)
            except Exception as e:
                ic("Error sending torrent file:", e)
        os.remove(torrent_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    else:
        ic("–¢–æ—Ä—Ä–µ–Ω—Ç-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–∫–∞—á–∞–Ω.")


def telegram_sender(data_dict):
    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    message = build_message(data_dict)

    # –°—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—Å—Ç–µ—Ä –∏ —Ç–æ—Ä—Ä–µ–Ω—Ç
    poster_url = data_dict['poster']
    torrent_url = data_dict['torrent_file']

    if not os.path.exists(users_file):
        with open(file=users_file, mode='w', encoding='utf8') as f:
            f.write('')

    with open(file=users_file, mode='r', encoding='utf8') as f:
        users = f.read()
        if '\n' in users:
            users = users.strip().split('\n')

    users_list = []
    for u in users:
        if u != '':
            users_list.append(u)

    USERS = [CHAT_ID, ] + users_list
    if ',' in CHAT_ID:
        USERS = CHAT_ID.replace(' ', '').split(',')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏ —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    for USER in list(set(USERS)):
        send_photo_with_caption(BOT_TOKEN, USER, message, poster_url)
        send_torrent_file(BOT_TOKEN, USER, torrent_url)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {USER} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ñ–∏–ª—å–º–µ {data_dict['–ù–∞–∑–≤–∞–Ω–∏–µ:']}")  # ic(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {USER}")


if __name__ == "__main__":
    telegram_sender(data_dict)
